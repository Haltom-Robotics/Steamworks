// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6133.Steamworks.commands;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc6133.Steamworks.Robot;
import org.usfirst.frc6133.Steamworks.RobotMap;

/**
 *
 */
public class AutonomousCommand extends Command {


	private boolean blueAlliance = false;
	private int lift = 0;
	private double t;
	private boolean done = false;
	private final double Kp = 0.25;
    public AutonomousCommand() {
    	requires(Robot.drivetrain);
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	done = false;
    	//RobotMap.gyro.reset();
    	if (RobotMap.allianceChooser.getSelected() == "blue")
        	blueAlliance = true;
        if (RobotMap.liftChooser.getSelected() == "left")
        	lift = 1;
        else if (RobotMap.liftChooser.getSelected() == "mid")
        	lift = 2;
        else if (RobotMap.liftChooser.getSelected() == "right")
        	lift = 3;
        else if (RobotMap.liftChooser.getSelected() == "none")
        	lift = 4;
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	t = 15 - Timer.getMatchTime();
    	if (lift == 2)
    	{
    		double angle = RobotMap.gyro.getAngle();
    		if (t < 0.25)
    			RobotMap.drivetrainRobotDrive.drive(-.1, -angle*Kp);
    		else if (t < .75)
    			RobotMap.drivetrainRobotDrive.drive(-.15, -angle*Kp);
    		else if (t < 5.1)
    			RobotMap.drivetrainRobotDrive.drive(-.2, -angle*Kp);
    		else {    		
    			RobotMap.drivetrainRobotDrive.drive(0, 0);
    			done = true;
    		}
    		Timer.delay(0.004);
    	}
    	if (lift == 4)
    	{
    		if (t < 0.25)
    			RobotMap.drivetrainRobotDrive.drive(-.1, 0);
    		else if (t < .75)
    			RobotMap.drivetrainRobotDrive.drive(-.2, 0);
    		else if (t < 4)
    			RobotMap.drivetrainRobotDrive.drive(-.3, 0);
    		else {    		
    			RobotMap.drivetrainRobotDrive.drive(0, 0);
    			done = true;
    		}
    	}
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return done;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
